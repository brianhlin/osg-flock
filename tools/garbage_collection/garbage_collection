#!/bin/bash

# prepare to update GWMS config/htcondor vars
glidein_config=$(readlink -f $1)
if [ "x$1" = "x" -o ! -e "$glidein_config"  ]; then
    echo "GWMS config not found"
    exit 0
fi

condor_vars=$(grep '^CONDOR_VARS_FILE ' $glidein_config | awk '{print $2}')
if [ "x$condor_vars" = "x" ]; then
    echo "GWMS condor vars not found"
    exit 0
fi

# make sure we start the script in the top level glide_XXXXX dir
glide_dir=$(grep '^GLIDEIN_WORKSPACE_ORIG ' $glidein_config | awk '{print $2}')
cd $glide_dir

# opt out
entry=$(grep '^GLIDEIN_Entry_Name ' $glidein_config | awk '{print $2}')
if [ "x$entry" = "x" ]; then
    echo "GC: Unable to determine entry name"
    exit 0
fi
if [ ! -e "client/garbage_collection.opt-out" ]; then
    echo "GC: client/garbage_collection.opt-out does not exist"
    exit 0
fi
if grep -x -F "$entry" client/garbage_collection.opt-out >/dev/null 2>&1; then
    echo "GC: testing disabled on $entry"
    exit 0
fi

# some sites do not set USER (in containers maybe) - this is required to
# figure out our uid
if [ "x$USER" = "x" ]; then
    export USER=$(whoami)
fi

ARCH=$(uname -m)
BIN=$(ls client/garbage_collection.$ARCH)
if [ "x$BIN" != "x" ]; then
    chmod 755 $BIN
    ./$BIN $glidein_config $condor_vars
else
    echo "Unable to run garbage_collection due to unknown arch: $ARCH"
    # do not exit non-zero here - it will make the glidein fail
fi

