#!/bin/bash

# prepare to update GWMS config/htcondor vars
glidein_config=$(readlink -f $1)
if [ "x$1" = "x" -o ! -e "$glidein_config"  ]; then
    echo "GWMS config not found"
    exit 0
fi

condor_vars=$(grep '^CONDOR_VARS_FILE ' $glidein_config | awk '{print $2}')
if [ "x$condor_vars" = "x" ]; then
    echo "GWMS condor vars not found"
    exit 0
fi

# GC deployment plan - initial testing only on Spark and ISI
entry=$(grep '^GLIDEIN_Entry_Name ' $glidein_config | awk '{print $2}')
case $entry in
    COVID19_US_AMNH-HEL-CE1* )        echo "GC: testing on resource $entry" ;;
    OSG_US_*-firebird-CE1 )           echo "GC: testing on resource $entry" ;;
    OSG_US_AMNH-Mendel_osg* )         echo "GC: testing on resource $entry" ;;
    OSG_US_CHTC-Spark-CE1* )          echo "GC: testing on resource $entry" ;;
    OSG_US_Hawaii-Koa-CE1 )           echo "GC: testing on resource $entry" ;;
    OSG_US_ISI_osg )                  echo "GC: testing on resource $entry" ;;
    OSG_US_MI-HORUS-CE1* )            echo "GC: testing on resource $entry" ;;
    OSG_US_MSU-DataMachine-CE1 )      echo "GC: testing on resource $entry" ;;
    OSG_US_MTState-Tempest-CE1* )     echo "GC: testing on resource $entry" ;;
    OSG_US_PSU-LIGO )                 echo "GC: testing on resource $entry" ;;
    OSG_US_TCNJ-ELSA-CE2* )           echo "GC: testing on resource $entry" ;;
    OSG_US_UCMerced-Pinnacles-CE1 )   echo "GC: testing on resource $entry" ;;
    *)
        echo "GC: testing disabled on resource $entry"
        exit 0
        ;;
esac

# make sure we start the script in the top level glide_XXXXX dir
glide_dir=$(grep '^GLIDEIN_WORKSPACE_ORIG ' $glidein_config | awk '{print $2}')
cd $glide_dir

ARCH=$(uname -m)
BIN=$(ls client/garbage_collection.$ARCH)
if [ "x$BIN" != "x" ]; then
    chmod 755 $BIN
    ./$BIN $glidein_config $condor_vars
else
    echo "Unable to run garbage_collection due to unknown arch: $ARCH"
    # do not exit non-zero here - it will make the glidein fail
fi

